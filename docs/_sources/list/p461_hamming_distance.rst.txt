
===========================================
461. Hamming Distance
===========================================

`<https://leetcode-cn.com/problems/hamming-distance/>`_

算 2 个 int 的比特位间的汉明距离。

关键点
===========================================

主要是记忆：

1. `xor` 不同位置变为1
2. 布赖恩·克尼根算法： x & (x - 1) 可以去掉x的最低位的比特 1

代码
===========================================

.. code: C++

    class Solution {
    public:
        int hammingDistance(int x, int y) {
            auto distance_bits = x ^ y;
            int cnt = 0;
            while (distance_bits != 0) {
                distance_bits &= (distance_bits - 1);
                ++cnt;
            }
            return cnt;
        }
    };
